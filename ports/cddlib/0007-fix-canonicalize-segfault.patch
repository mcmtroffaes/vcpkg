From b7d7d44cee03a1b3afe9d08c3eba43c1c73aad0b Mon Sep 17 00:00:00 2001
From: "Matthias C. M. Troffaes" <matthias.troffaes@gmail.com>
Date: Tue, 24 Sep 2024 13:56:03 +0100
Subject: [PATCH] Fix dd_MatrixCanonicalize segfault (error could result in
 freeing of uninitialized pointer).

---
 lib-src/cddlp.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/lib-src/cddlp.c b/lib-src/cddlp.c
index 3f59593..d472365 100644
--- a/lib-src/cddlp.c
+++ b/lib-src/cddlp.c
@@ -3343,17 +3343,20 @@ dd_rowindex *newpos, dd_ErrorType *error) /* 094 */
    redundancies will be returned by *redset.
 */
   dd_rowrange i,k,m;
-  dd_rowindex newpos1,revpos;
-  dd_rowset redset1;
+  dd_rowindex newpos1=NULL,revpos=NULL;
+  dd_rowset redset1=NULL;
   dd_boolean success=dd_TRUE;
   
+  impl_linset = NULL;
   m=(*M)->rowsize;
   set_initialize(redset, m);
+  newpos = NULL;
+  *error=dd_NoError;
   revpos=(long *)calloc(m+1,sizeof(long));
   
   success=dd_MatrixCanonicalizeLinearity(M, impl_linset, newpos, error);
 
-  if (!success) goto _L99;  
+  if (!success || *error != dd_NoError) goto _L99;  
   
   for (i=1; i<=m; i++){
     k=(*newpos)[i];
@@ -3362,7 +3365,7 @@ dd_rowindex *newpos, dd_ErrorType *error) /* 094 */
  
   success=dd_MatrixRedundancyRemove(M, &redset1, &newpos1, error);  /* 094 */
   
-  if (!success) goto _L99;
+  if (!success || *error != dd_NoError) goto _L99;  
 
   for (i=1; i<=m; i++){
     k=(*newpos)[i];
-- 
2.21.0.windows.1

