diff --git a/avs_core/core/avisynth.cpp b/avs_core/core/avisynth.cpp
index 153bd9b0..f57c6887 100644
--- a/avs_core/core/avisynth.cpp
+++ b/avs_core/core/avisynth.cpp
@@ -1131,7 +1131,7 @@ struct ScriptEnvironmentTLS
 // this is a work-around for that.
 #ifdef AVS_WINDOWS
 #  ifdef XP_TLS
-extern DWORD dwTlsIndex;
+extern _TLS _tls;
 #  else
 // does not work on XP when DLL is dynamic loaded. see dwTlsIndex instead
 __declspec(thread) ScriptEnvironmentTLS* g_TLS = nullptr;
@@ -1159,14 +1159,14 @@ public:
     if (thread_id != 0) {
       // thread pool thread
 #ifdef XP_TLS
-      ScriptEnvironmentTLS* g_TLS = (ScriptEnvironmentTLS*)(TlsGetValue(dwTlsIndex));
+      ScriptEnvironmentTLS* g_TLS = (ScriptEnvironmentTLS*)(TlsGetValue(_tls.dwTlsIndex));
 #endif
       if (g_TLS != nullptr) {
         ThrowError("Detected multiple ScriptEnvironmentTLSs for a single thread");
       }
       g_TLS = &myTLS;
 #ifdef XP_TLS
-      if (!TlsSetValue(dwTlsIndex, g_TLS)) {
+      if (!TlsSetValue(_tls.dwTlsIndex, g_TLS)) {
         ThrowError("Could not store thread local value for ScriptEnvironmentTLS");
       }
 #endif
@@ -1183,7 +1183,7 @@ public:
 #ifdef XP_TLS
   // a ? : b, evaluate 'a' only once
 #define IFNULL(a, b) ([&](){ auto val = (a); return ((val) == nullptr ? (b) : (val)); }())
-#define DISPATCH(name) IFNULL((ScriptEnvironmentTLS*)(TlsGetValue(dwTlsIndex)), coreTLS)->name
+#define DISPATCH(name) IFNULL((ScriptEnvironmentTLS*)(TlsGetValue(_tls.dwTlsIndex)), coreTLS)->name
 #else
 #define DISPATCH(name) (g_TLS ? g_TLS : coreTLS)->name
 #endif
@@ -1575,7 +1575,7 @@ public:
     bool is_runtime = true;
 
 #ifdef XP_TLS
-    ScriptEnvironmentTLS* g_TLS = (ScriptEnvironmentTLS*)(TlsGetValue(dwTlsIndex));
+    ScriptEnvironmentTLS* g_TLS = (ScriptEnvironmentTLS*)(TlsGetValue(_tls.dwTlsIndex));
 #endif
     if (g_TLS == nullptr) { // not called by thread
       if (GetFrameRecursiveCount() == 0) { // not called by GetFrame
@@ -1741,7 +1741,7 @@ public:
   void __stdcall DeleteScriptEnvironment()
   {
 #ifdef XP_TLS
-    ScriptEnvironmentTLS* g_TLS = (ScriptEnvironmentTLS*)(TlsGetValue(dwTlsIndex));
+    ScriptEnvironmentTLS* g_TLS = (ScriptEnvironmentTLS*)(TlsGetValue(_tls.dwTlsIndex));
 #endif
     if (g_TLS != nullptr) {
       ThrowError("Cannot delete environment from a TLS proxy.");
@@ -2220,7 +2220,7 @@ ScriptEnvironment::ScriptEnvironment()
   nMaxFilterInstances(1)
 {
 #ifdef XP_TLS
-    if(dwTlsIndex == 0)
+    if(_tls.dwTlsIndex == 0)
       throw("ScriptEnvironment: TlsAlloc failed on DLL load");
 #endif
 
diff --git a/avs_core/core/internal.h b/avs_core/core/internal.h
index cb015d02..d0c32f34 100644
--- a/avs_core/core/internal.h
+++ b/avs_core/core/internal.h
@@ -311,4 +311,22 @@ public:
    }
 };
 
+#ifdef XP_TLS
+#include <avs/win.h>
+struct _TLS {
+  DWORD dwTlsIndex;
+  _TLS() : dwTlsIndex(0) {
+    if ((dwTlsIndex = TlsAlloc()) == TLS_OUT_OF_INDEXES)
+      throw("TlsAlloc failed");
+    _RPT1(0, "TlsAlloc: dwTlsIndex=0x%x\n", dwTlsIndex);
+
+  }
+  ~_TLS() {
+    _RPT1(0, "TlsFree: dwTlsIndex=0x%x\n", dwTlsIndex);
+    TlsFree(dwTlsIndex);
+    dwTlsIndex = 0;
+  }
+};
+#endif
+
 #endif  // __Internal_H__
diff --git a/avs_core/core/main.cpp b/avs_core/core/main.cpp
index 7fc28a56..55ddc264 100644
--- a/avs_core/core/main.cpp
+++ b/avs_core/core/main.cpp
@@ -122,7 +122,7 @@ void ReportMe(const char * msg, ...) {
 static long gRefCnt=0;
 
 #ifdef XP_TLS
-DWORD dwTlsIndex = 0;
+_TLS _tls;
 #endif
 
 extern "C" const GUID CLSID_CAVIFileSynth   // {E6D6B700-124D-11D4-86F3-DB80AFD98778}
@@ -280,19 +280,6 @@ BOOL APIENTRY DllMain(HANDLE hModule, ULONG ulReason, LPVOID lpReserved) {
   _RPT4(0,"DllMain: hModule=0x%08x, ulReason=%x, lpReserved=0x%08x, gRefCnt = %ld\n",
     hModule, ulReason, lpReserved, gRefCnt);
 
-#ifdef XP_TLS
-  if (ulReason == DLL_PROCESS_ATTACH) {
-    if ((dwTlsIndex = TlsAlloc()) == TLS_OUT_OF_INDEXES)
-      throw("Avisynth DLL load: TlsAlloc failed");
-    _RPT1(0, "DllMain: TlsAlloc: dwTlsIndex=0x%x\n", dwTlsIndex);
-  }
-  else if (ulReason == DLL_PROCESS_DETACH) {
-    _RPT1(0, "DllMain: TlsFree: dwTlsIndex=0x%x\n", dwTlsIndex);
-    TlsFree(dwTlsIndex);
-    dwTlsIndex = 0;
-  }
-#endif
-
   return TRUE;
 }
 
diff --git a/avs_core/include/avs/config.h b/avs_core/include/avs/config.h
index d78ddc4d..ff5c7271 100644
--- a/avs_core/include/avs/config.h
+++ b/avs_core/include/avs/config.h
@@ -149,7 +149,7 @@
 #define NEW_AVSVALUE
 #endif
 
-#if defined(AVS_WINDOWS)
+#if defined(AVS_WINDOWS) && defined(_USING_V110_SDK71_)
 // Windows XP does not have proper initialization for
 // thread local variables.
 // Use workaround instead __declspec(thread)
